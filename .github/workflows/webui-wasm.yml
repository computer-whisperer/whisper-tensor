name: WebUI WASM Build

on:
  push:
    branches: [ "main" ]
    paths:
      - "crates/whisper-tensor-webui/**"
      - "src/**"                   # root crate source
      - "crates/**"                # any other workspace crates that root may expose
      - "Cargo.toml"
      - "Cargo.lock"
      - "build.rs"
      - ".github/workflows/webui-wasm.yml"
  pull_request:
    branches: [ "main" ]
    paths:
      - "crates/whisper-tensor-webui/**"
      - "src/**"
      - "crates/**"
      - "Cargo.toml"
      - "Cargo.lock"
      - "build.rs"
      - ".github/workflows/webui-wasm.yml"

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: '--cfg getrandom_backend="wasm_js"'
  CARGO_TARGET_DIR: target   # ensure a single workspace-level target dir

jobs:
  build-wasm:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Rust (stable) + wasm32 target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Cache cargo (registry, git, target)
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-wasm-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-wasm-

      - name: Cache wasm-pack tool cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/.wasm-pack
          key: ${{ runner.os }}-wasm-pack-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-wasm-pack-

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'  # pin if you prefer

      - name: Build webui crate (wasm)
        working-directory: crates/whisper-tensor-webui
        # If the root crate has native-only default features, uncomment the last line and adjust features.
        run: |
          wasm-pack build --target web --locked
          # wasm-pack build --target web --locked -- --no-default-features --features web
